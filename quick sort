#include<stdio.h>
#include<stdlib.h>
#include<time.h>

int pivot_position(int arr[], int low, int high)
{
    int pivot=arr[low];
    int i=low;
    int j=high;
    while (i<j)
    {
        while(arr[i]<=pivot && i<=high)
        {
            i++;
        }
        
        while(arr[j]>pivot && j>=low)
        {
            j--;
        }
        //violation occurs
        if(i<j)
        {
            int temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
        }
    }
    arr[low]=arr[j];
    arr[j]=pivot;
    return j;
}

void quicksort(int arr[], int low, int high)
{
    if(low<high)
    {
        int pivot=pivot_position(arr, low, high);
        quicksort(arr, low, pivot-1);
        quicksort(arr, pivot+1, high);
    }
}

int main(){
    clock_t start, end;
    int n;
     int arr[20000];
    int choice;
    while(1)
    {
        printf("enter 1 to enter your array, enter 2 to calculate time taken from elements from n=1000 to 10000, enter 3 to exit");
        scanf("%d", &choice);
        switch(choice)
        {
            
    case 1:printf("enter the number of elements");
    scanf("%d", &n);
    printf("enter the elements of the array");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    //random input
    //for(int i=0; i<n;i++)
    //{
      //  arr[i]=rand();
    //}
    start=clock();
    quicksort(arr,0,n-1);
    end=clock();
    printf("the sorted elements are:");
    for(int i=0;i<n;i++)
    {
        printf("%d\n", arr[i]);
    }
    printf("the time taken is %f\n", difftime(end,start)/CLOCKS_PER_SEC);
    break;
    
    case 2: n=1000;
    while(n<=10000)
    {
        for(int i=0; i<n; i++)
        {
            arr[i]=n-1;
        }
        start=clock();
        quicksort(arr,0,n-1);
        end=clock();
        printf("the time taken to sort %d elements is %f\n",n, difftime(end,start)/CLOCKS_PER_SEC);
        n=n+1000;
    }
    break;
    
    case 3: exit(0);
    break;
        }
    }
    
}
