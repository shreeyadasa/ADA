#include<stdio.h>
#include<stdlib.h>
int min( int a, int b){
    if(a<b)
    return a;
    else
    return b;}
void floyds(int a[10][10], int n){
    int i,j,k;
    for(k=0;k<n;k++)
    for(i=0;i<n;i++)
    for(j=0;j<n;j++) {
        if(i=j)
        a[i][j]=0;
        else
        a[i][j]=min(a[i][j],a[i][k]+a[k][j]); }}
void main()
{ int i,j,n,source,destination;
    int a[10][10];
    printf("Enter the no of vertices");
    scanf("%d", &n);
    printf("ENter the cost adjacency matrix:\n");
    for(i=0;i<n;i++)
    { for(j=0;j<n;j++){
            scanf("%d", &a[i][j]);
        } }
     floyds(a,n);
     printf("the shortest paths are");
     for(i=0;i<n;i++)
     for(j=0;j<n;j++){
         if(i!=j)
         printf("\t %d -> %d = %d \n",i,j,a[i][j]);}
     //modif
     printf("enter the source vertex");
     scanf("%d",&source);
     printf("enter the destination matrix");
     scanf("%d", &destination);
     printf("shortest path between %d and %d is %d",source,destination,a[source][destination]);}
